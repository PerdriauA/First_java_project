import java.io.*;

public class Type_sejour implements Serializable{

    private static String destination[]= {"Pointe a pitre","Fort de France","Tombouctou","Dakar","Casablanca"};
    public static String itinerant[]={"Pointe a pitre","Fort de France","Tombouctou","Dakar","Casablanca"};
    public static String ville_itinerant;
    public static String ville_arrivee;
    
	
    public static boolean disponibilite2 [] [] = {
	    {false,  true, false, false, false},
	    { true, false, false, false, false},
	    {false, false, false,  true,  true},
	    {false, false,  true, false,  true},
	    {false, false,  true,  true, false},
	    };
	  
    public static int prix6 [][]={
	{0, 110, 0, 0, 0},
        {100, 0, 0, 0, 0},
        {0, 0, 0, 60, 50},
        {0, 0, 70,  0, 80},
	{0, 0, 70, 60, 0} 
        };
	 
    public void sejour()
    {
	System.out.println("Le client choisi une offre simple ou itinérante?");
    	System.out.println("Tapez 1 pour simple et 2 pour itinérante");
    	int rep = saisieEntier();
	
    	if (rep == 1)
    	{
	    System.out.println("Le client veut une offre simple");
	    System.out.println("Rendez vous dans la rubrique : destination.");
	}
	
    	if (rep == 2)
	{
	    System.out.println("Le client veut une offre itinérante");
	    itinerant();
	}
    }
	
    public static void itinerant()
    {
	System.out.println("Le client part d'où?");

	for (int i = 0; i < itinerant.length; i ++)
	    {
		System.out.println(itinerant[i]);
	    }
	while (true)
	    {
		System.out.println("Saisissez la ville de départ.");
		ville_itinerant = saisieChaine();
		if (controle(itinerant, ville_itinerant) == true)
		    {
			break;
		    }
	    }
	    System.out.println("Depuis "+ville_itinerant+" plusieurs destinations sont possibles.");
	    for (int i = 0; i<destination.length; i++)
		{
		    if (verif2(ville_itinerant, destination [i])==true)
			{
			    System.out.println(destination[i]);
			}
		}
	
	while (true)
	{ 
	    System.out.println("Vous pouvez vous déplacer une fois.");
	    System.out.println("Saisissez la destination souhaitée.");
	    ville_arrivee = saisieChaine();	       
	    
	   if (controle(destination, ville_arrivee)==true)
	       {
		   break;
	       }
        }
	if (verif2(ville_itinerant, ville_arrivee)==true)
	   {
		System.out.println("Le client voyagera entre : "+ville_itinerant+" et "+ville_arrivee);			  
           }
        else
           {
		System.out.println("Il n'y a pas de vol disponible pour la destination suivante : "+ville_arrivee);
           }		  	  
    }
	
    public static boolean verif2(String ville_itinerant, String ville_arrivee)
    {
	int i = 0;
	int j = 0;
	for (i = 0; i<itinerant.length; i++)
	    {
		if (ville_itinerant.equals (itinerant[i]))
		    {
			for (j = 0; j<destination.length; j++)
			    {
				if (ville_arrivee.equals(destination[j]))
				    {
					return disponibilite2 [i][j];
				    }	
			    }
		    }
	    }
	return false;
    }
	
    private static boolean controle(String [] villes, String ville)
    {
	int  i = 0;
	for (i = 0;i<villes.length; i++)
	    {
		if (ville.equals(villes[i]))
		    {
			return true;
		    }
	    }
	if (i>= villes.length)
	    {
		System.out.println("La ville : "+ville+ ", ne fait pas partie de la liste");
		return false;
	    }
	return false;
    }		
    
    public int rechercher_prix (String ville_itinerant, String ville_arrivee)
    {
	int i = 0;
	int j = 0;
	
	for (i=0; i<itinerant.length; i++)
	    {
		if (ville_itinerant.equals(itinerant[i]))
		    {
			for (j=0; j<destination.length; j++)
			    {
				if (ville_arrivee.equals(destination[j]))
				    {
					return (int)(prix6[i][j]+100);
				    }
			    }
		    }
	    }
	return 0;
    }

    private static String saisieChaine()
    {
	try
	    {
		BufferedReader buff = new BufferedReader(new InputStreamReader(System.in));
		String chaine=buff.readLine();
			
		return chaine;
	    }
	catch (IOException e) 
	    {
		System.out.println("impossible de travailler" +e);
		return null;
	    }
    }

    public static int saisieEntier()
    {
	try
	    {
		BufferedReader buff = new BufferedReader (new InputStreamReader(System.in));
		String chaine = buff.readLine();
		int num = Integer.parseInt(chaine);
		return num;
	    }
	catch(IOException e){return 0;}
    }

    void save (BufferedWriter buff)throws IOException
    {
	buff.write(ville_itinerant);
	buff.newLine();
	buff.write(ville_arrivee);
	buff.newLine();
	String prix = String.valueOf(prix6);
	buff.write(prix);
	buff.newLine();		  
    }		

}
